# Generated by Django 5.0.6 on 2024-05-28 11:42

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("avatar", models.ImageField(upload_to="upload/%y/%m")),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Doctor",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                ("email_address", models.EmailField(blank=True, max_length=254)),
                ("address", models.CharField(max_length=255, null=True)),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Nam"), ("F", "Nữ"), ("O", "Khác")], max_length=1
                    ),
                ),
                ("date_of_birth", models.DateField()),
                ("phone_number", models.CharField(max_length=15)),
                ("specialization", models.CharField(max_length=255)),
                ("medical_school", models.CharField(max_length=255, null=True)),
                ("certifications", models.TextField(blank=True)),
                (
                    "photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="upload/doctors/%y/%m"
                    ),
                ),
                ("biography", models.TextField(blank=True)),
            ],
            options={
                "abstract": False,
                "unique_together": {("first_name", "last_name", "phone_number")},
            },
        ),
        migrations.CreateModel(
            name="Nurse",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                ("email_address", models.EmailField(blank=True, max_length=254)),
                ("address", models.CharField(max_length=255, null=True)),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Nam"), ("F", "Nữ"), ("O", "Khác")], max_length=1
                    ),
                ),
                ("date_of_birth", models.DateField()),
                ("phone_number", models.CharField(max_length=15)),
                ("specialization", models.CharField(max_length=255)),
            ],
            options={
                "abstract": False,
                "unique_together": {("first_name", "last_name", "phone_number")},
            },
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                ("email_address", models.EmailField(blank=True, max_length=254)),
                ("address", models.CharField(max_length=255, null=True)),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Nam"), ("F", "Nữ"), ("O", "Khác")], max_length=1
                    ),
                ),
                ("date_of_birth", models.DateField()),
                ("phone_number", models.CharField(max_length=15)),
                ("created_date", models.DateField(auto_now_add=True)),
                ("active", models.BooleanField(default=True)),
                ("description", models.TextField(blank=True)),
                ("process", models.TextField(blank=True)),
                (
                    "paid",
                    models.DecimalField(decimal_places=1, default=0, max_digits=10),
                ),
                (
                    "total_due",
                    models.DecimalField(decimal_places=1, default=0, max_digits=10),
                ),
                ("next_appointment", models.DateField()),
                (
                    "patient_type",
                    models.CharField(
                        choices=[("N", "KH mới"), ("R", "KH thân quen")], max_length=1
                    ),
                ),
                ("discount", models.DecimalField(decimal_places=1, max_digits=2)),
                (
                    "x_ray",
                    models.ImageField(
                        blank=True, null=True, upload_to="upload/doctors/%y/%m"
                    ),
                ),
                (
                    "doctors",
                    models.ManyToManyField(related_name="patients", to="api.doctor"),
                ),
                (
                    "nurses",
                    models.ManyToManyField(related_name="patients", to="api.nurse"),
                ),
            ],
            options={
                "ordering": ["-created_date"],
            },
        ),
    ]
